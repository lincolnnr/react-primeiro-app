{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lincolnnogueira/Documents/Projects/api-react/primeiro-projeto/src/pages/Repository/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { FiChevronLeft, FiChevronRight } from 'react-icons/fi';\nimport api from '../../services/api';\nimport { Header, RepositoryInfo, Issues } from './styles';\nimport logoImg from \"../../assets/img/Logo.svg\";\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nconst Repository = () => {\n  _s();\n\n  const [repository, setRepository] = useState(null);\n  const [issues, setIssues] = useState([]);\n  const {\n    params\n  } = useRouteMatch();\n  useEffect(() => {\n    api.get(`repos/${params.repository}`).then(response => {\n      setRepository(response.data);\n    });\n    api.get(`repos/${params.repository}/issues`).then(response => {\n      setIssues(response.data);\n    });\n  }, [params.repository]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logoImg,\n        alt: \"Github Explorer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: [\"Voltar\", /*#__PURE__*/_jsxDEV(FiChevronLeft, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), repository && /*#__PURE__*/_jsxDEV(RepositoryInfo, {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: repository.owner.avatar_url,\n          alt: repository.owner.login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: repository.full_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: repository.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: repository.stargazers_count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: repository.forks_count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Forks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: repository.open_issues_count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Issues abertos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Issues, {\n      children: issues.map(issues => /*#__PURE__*/_jsxDEV(\"a\", {\n        href: issues.html_url,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: issues.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: issues.user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FiChevronRight, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this)]\n      }, issues.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Repository, \"/i04/VOPCDn6T9cnxjw0Rx1OcRc=\", false, function () {\n  return [useRouteMatch];\n});\n\n_c = Repository;\nexport default Repository;\n\nvar _c;\n\n$RefreshReg$(_c, \"Repository\");","map":{"version":3,"sources":["/Users/lincolnnogueira/Documents/Projects/api-react/primeiro-projeto/src/pages/Repository/index.tsx"],"names":["React","useEffect","useState","Link","useRouteMatch","FiChevronLeft","FiChevronRight","api","Header","RepositoryInfo","Issues","Repository","repository","setRepository","issues","setIssues","params","get","then","response","data","logoImg","owner","avatar_url","login","full_name","description","stargazers_count","forks_count","open_issues_count","map","html_url","title","user","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { FiChevronLeft, FiChevronRight } from 'react-icons/fi';\n\nimport api from '../../services/api';\n\nimport { Header, RepositoryInfo, Issues } from './styles'\nimport logoImg from '../../assets/img/Logo.svg';\n\n\ninterface RepositoryParans {\n    repository: string;\n}\n\ninterface Repository {\n    full_name: string;\n    description: string;\n    stargazers_count: number;\n    forks_count: number;\n    open_issues_count: number;\n    owner: {\n        login: string;  \n        avatar_url: string;\n    }\n}\n\ninterface Issue {\n    \n    title: string;\n    html_url: string;\n    user: {\n        login: string;  \n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nconst Repository: React.FC = () => {\n    const [repository, setRepository] = useState<Repository | null>(null);\n    const [issues, setIssues] = useState<Issue[]>([]);\n\n    const { params } = useRouteMatch<RepositoryParans>();\n\n    useEffect(() => {\n        api.get(`repos/${params.repository}`).then(response => {\n            setRepository(response.data);\n        });\n\n        api.get(`repos/${params.repository}/issues`).then(response => {\n            setIssues(response.data);\n        });\n    }, [params.repository]);\n\n    return (\n        <>\n        <Header>\n            <img src={logoImg} alt=\"Github Explorer\"/>\n            <Link to=\"/\">Voltar\n                <FiChevronLeft size={20}></FiChevronLeft>\n            </Link>\n        </Header>\n        { repository && (\n        <RepositoryInfo>\n            <header>\n                <img src={repository.owner.avatar_url} alt={repository.owner.login} />\n                <div>\n                    <strong>\n                        {repository.full_name}\n                    </strong>\n                    <p>{repository.description}</p>\n                </div>\n            </header>\n            <ul>\n                <li>\n                    <strong>{repository.stargazers_count}</strong>\n                    <span>Start</span>    \n                </li>\n                <li>\n                    <strong>{repository.forks_count}</strong>\n                    <span>Forks</span>    \n                </li>\n                <li>\n                    <strong>{repository.open_issues_count}</strong>\n                    <span>Issues abertos</span>    \n                </li>\n            </ul>\n        </RepositoryInfo>\n        )}\n        <Issues>\n            {issues.map(issues => (\n            <a key={issues.id} href={issues.html_url}>\n                <div>\n                    <strong>\n                        {issues.title}\n                    </strong>\n                    <p>{issues.user}</p>\n                </div>\n                <FiChevronRight size={20}></FiChevronRight>\n            </a>\n            ))}\n        </Issues>\n        </>\n    );  \n};\n\nexport default Repository;"]},"metadata":{},"sourceType":"module"}