{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lincolnnogueira/Documents/Projects/api-react/primeiro-projeto/src/pages/Dashboard/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { FiChevronRight } from 'react-icons/fi';\nimport api from '../../services/api';\nimport logoImg from \"../../assets/img/Logo.svg\";\nimport { Title, Form, Repositories, Error } from './styles';\n\nconst Dashboard = () => {\n  _s();\n\n  const [newRepo, setNewRepo] = useState('');\n  const [inputError, setinputError] = useState('');\n  const [repositories, setRepositories] = useState([]);\n\n  async function handleAddRepository(event) {\n    event.preventDefault();\n\n    if (!newRepo) {\n      setinputError('Digite o autor/nome do repositório');\n      return;\n    }\n\n    try {\n      const response = await api.get(`repos/${newRepo}`);\n      const repository = response.data;\n      setRepositories([...repositories, repository]);\n      setNewRepo('');\n      setinputError('');\n    } catch (err) {\n      setinputError('Erro na busca do repositório');\n    }\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logoImg,\n      alt: \"Github Explorer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Title, {\n      children: \"Explore reposit\\xF3rios no Github\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      hasError: !!inputError,\n      onSubmit: handleAddRepository,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newRepo,\n        onChange: e => setNewRepo(e.target.value),\n        type: \"text\",\n        placeholder: \"Digite o nome do reposit\\xF3rio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"PESQUISAR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), inputError && /*#__PURE__*/_jsxDEV(Error, {\n      children: inputError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(Repositories, {\n      children: repositories.map(repository => /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: repository.owner.avatar_url,\n          alt: repository.owner.login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: repository.full_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: repository.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FiChevronRight, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, repository.full_name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Dashboard, \"snq2csWYfrJ6tRzNlc/+/8na3C0=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/lincolnnogueira/Documents/Projects/api-react/primeiro-projeto/src/pages/Dashboard/index.tsx"],"names":["React","useState","FiChevronRight","api","Title","Form","Repositories","Error","Dashboard","newRepo","setNewRepo","inputError","setinputError","repositories","setRepositories","handleAddRepository","event","preventDefault","response","get","repository","data","err","logoImg","e","target","value","map","owner","avatar_url","login","full_name","description"],"mappings":"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","sourcesContent":["import React, { useState, FormEvent } from 'react';\nimport { FiChevronRight } from 'react-icons/fi';\n\nimport api from '../../services/api';\n\nimport logoImg from '../../assets/img/Logo.svg';\n\nimport { Title, Form, Repositories, Error } from './styles'\n\ninterface Repository {\n    full_name: string;\n    description: string;\n    owner: {\n        login: string;  \n        avatar_url: string;\n    }\n}\n\nconst Dashboard: React.FC = () => {\n    const [newRepo, setNewRepo] = useState('');\n    const [inputError, setinputError] = useState('');\n    const [repositories, setRepositories] = useState<Repository[]>([]);\n\n    async function handleAddRepository(\n        event: FormEvent<HTMLFormElement>,\n    ): Promise<void> {\n        event.preventDefault();\n\n        if(!newRepo){\n            setinputError('Digite o autor/nome do repositório');\n            return;\n        }\n        try{\n        const response = await api.get(`repos/${newRepo}`);\n\n        const repository = response.data;\n\n        setRepositories([...repositories,repository]);\n        setNewRepo('');\n        setinputError('');\n        }catch(err){\n            setinputError('Erro na busca do repositório');\n        }\n    };\n\n    return (\n        <>\n            <img src={logoImg} alt=\"Github Explorer\"/>\n            <Title>Explore repositórios no Github</Title>\n\n            <Form hasError={!!inputError} onSubmit={handleAddRepository}>\n                <input \n                    value={newRepo}\n                    onChange={e => setNewRepo(e.target.value)}\n                type=\"text\" placeholder=\"Digite o nome do repositório\"/>\n                <button>PESQUISAR</button>\n            </Form>\n    {inputError && <Error>{inputError}</Error>} \n            <Repositories>\n                {repositories.map(repository => (\n                <a key={repository.full_name} href=\"\">\n                    <img src={repository.owner.avatar_url} alt={repository.owner.login}/>\n                    <div>\n                        <strong>\n                         {repository.full_name}\n                        </strong>\n                        <p>{repository.description}</p>\n                    </div>\n                    <FiChevronRight size={20}></FiChevronRight>\n                </a>\n                ))}\n            </Repositories>\n        </>\n    );\n};\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}